name: 'Merge to nonprod'
description: 'Merge to nonprod'

runs:
  using: 'composite'
  steps:
    - name: "Get default branch"
      id: branch-name
      # https://github.com/tj-actions/branch-names
      uses: tj-actions/branch-names@v5

    - name: "Echo branches"
      shell: bash
      run: |
        echo "default_branch: ${{ steps.branch-name.outputs.default_branch }}"
        echo "base_ref_branch: ${{ steps.branch-name.outputs.base_ref_branch }}"
        echo "current_branch: ${{ steps.branch-name.outputs.current_branch }}"

    - name: "Checkout repository"
      uses: actions/checkout@v3
      with:
        ref: ${{ steps.branch-name.outputs.base_ref_branch }}
        # The default of 1 only fetches the default branch. We also want nonprod, so we fetch all.
        fetch-depth: 0

    - name: "Setup git config"
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Github Action"

    - name: "Prepare nonprod"
      shell: bash
      env:
        BRANCH_NAME: ${{ github.head_ref }}
      run: |
        set -o errexit -o nounset
        echo "nonprod branch does not exist. Creating it from master"
        if git switch nonprod 2>/dev/null; then
          branchName="$BRANCH_NAME"
          # https://stackoverflow.com/a/29613573/5390250
          escapedBranchName=$(sed "s/[^^]/[&]/g; s/\^/\\^/g" <<< "$branchName")
          echo "nonprod branch exists. Dropping old feature commit '$branchName' if it exists"
          GIT_SEQUENCE_EDITOR="sed -i -e \"s/pick\(.*$escapedBranchName\)$/drop\1/g\"" git rebase -i "${{ steps.branch-name.outputs.base_ref_branch }}"
        else
          echo "nonprod branch does not exist. Creating it from ${{ steps.branch-name.outputs.base_ref_branch }}"
          git checkout -b nonprod origin/${{ steps.branch-name.outputs.base_ref_branch }}
        fi

    - name: "Merge feature to nonprod"
      shell: bash
      env:
        BRANCH_NAME: ${{ github.head_ref }}
      run: |
        set -o nounset -o errexit
        git merge --squash "origin/$BRANCH_NAME"
        git commit -m "$BRANCH_NAME"

    - name: "Push changes"
      if: ${{ !env.ACT }}
      shell: bash
      run: |
        git push --force origin nonprod
