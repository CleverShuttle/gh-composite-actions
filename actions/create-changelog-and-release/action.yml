name: 'Generate changelog and create release'
description: 'Generate a changelog and create a GitHub release'

inputs:
  artifactory_password:
    description: 'Secret Artifactory_password password'
    required: true

  artifactory_username:
    description: 'Secret Artifactory_password username'
    required: true

outputs:
  changelog:
    description: 'The generated changelog for the new version'
    value: ${{ steps.changelog-with-jira-links.outputs.text }}

  version:
    description: 'The new version'
    value: ${{ steps.versioning.outputs.version }}

  tag:
    description: 'The new tag'
    value: ${{ steps.versioning.outputs.tag }}

runs:
  using: 'composite'
  steps:
    - name: "Copy Maven settings"
      # Use always master as ref
      uses: CleverShuttle/gh-composite-actions/actions/maven-settings@master

    - name: 'Install package required in changelog.config.js'
      # see https://stackoverflow.com/a/66643346
      shell: bash
      run: |
        cd ${{github.action_path}} && npm i conventional-changelog-conventionalcommits

    - name: 'Generate changelog'
      id: conventional-changelog
      # https://github.com/TriPSs/conventional-changelog-action
      uses: TriPSs/conventional-changelog-action@v3.11.0
      with:
        preset: conventionalcommits
        github-token: ${{ github.token }}
        git-push: false
        skip-version-file: true
        skip-commit: true
        release-count: 50
        config-file-path: ${{ github.action_path }}/changelog.config.js

    - name: 'Semantic versioning'
      id: semantic-versioning
      # https://github.com/ietf-tools/semver-action
      uses: ietf-tools/semver-action@v1.1.1
      with:
        token: ${{ github.token }}
        # https://stackoverflow.com/a/71158878
        branch: ${{ github.head_ref || github.ref_name }}
        minorList: feat, feature
        # https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional#type-enum
        patchList: fix, bugfix, perf, refactor, test, tests, chore, build, ci, doc, docs, revert, style, deps, improvements, enhancement, other

    - name: 'Set version and tag'
      id: versioning
      shell: bash
      env:
        SEMANTIC_VERSIONING_VERSION: ${{ env.nextStrict }}
      run: |
        echo "Semantic-versioning version '$SEMANTIC_VERSIONING_VERSION'"
        echo "::set-output name=version::$SEMANTIC_VERSIONING_VERSION"
        echo "::set-output name=tag::v$SEMANTIC_VERSIONING_VERSION"

    - name: 'Generate Jira links for the changelog'
      shell: bash
      id: changelog-with-jira-links
      env:
        # https://github.com/TriPSs/conventional-changelog-action#outputs
        CHANGELOG: ${{ steps.conventional-changelog.outputs.clean_changelog }}
      run: |
        if [ -z "$CHANGELOG" ]; then
          output=""
          echo "::set-output name=text::$output"
        else
          output=$(node ${{ github.action_path }}/generate-jira-links.js)
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}"
          echo "Update changelog with Jira links: '$output'"
          echo "::set-output name=text::$output"
        fi

    - name: 'Bump project maven versions'
      shell: bash
      env:
        USERNAME: ${{ inputs.artifactory_username }}
        PASSWORD: ${{ inputs.artifactory_password }}
        NEW_VERSION: ${{ steps.versioning.outputs.version }}
      run: |
        mvn $MAVEN_ARGS versions:set \
          -DnewVersion="$NEW_VERSION" \
          -DprocessAllModules=true \
          -DgenerateBackupPoms=false
        mvn $MAVEN_ARGS versions:commit

    - name: "Commit changes and set git tag"
      shell: bash
      env:
        NEW_TAG: ${{ steps.versioning.outputs.tag }}
        NEW_VERSION: ${{ steps.versioning.outputs.version }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Github Action"
        git add CHANGELOG.md
        git add pom.xml
        git commit -m "chore(release): $NEW_VERSION" -a
        
        if [ $(git tag -l "$NEW_TAG") ]; then
          echo "Delete tag from 'conventional-changelog-action'"
          git tag -d "$NEW_TAG"
        fi

        git tag -a "$NEW_TAG" -m "$NEW_TAG"

    - name: 'Push changes'
      # https://github.com/ad-m/github-push-action
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ github.token }}
        branch: ${{ github.ref }}

    - name: 'Create Github release'
      # https://github.com/softprops/action-gh-release
      id: gh-release
      uses: softprops/action-gh-release@v0.1.14
      env:
        github_token: ${{ github.token }}
      with:
        body: ${{ steps.changelog-with-jira-links.outputs.text }}
        tag_name: ${{ steps.versioning.outputs.tag }}
        name: ${{ steps.versioning.outputs.tag }}

    - name: 'Outputs'
      shell: bash
      env:
        NEW_TAG: ${{ steps.versioning.outputs.tag }}
        NEW_VERSION: ${{ steps.versioning.outputs.version }}
        CHANGELOG: ${{ steps.changelog-with-jira-links.outputs.text }}
      run: |
        echo "Version: '$NEW_VERSION'"
        echo "Tag: '$NEW_TAG'"
        echo "Changelog: '$CHANGELOG'"
