name: 'Slack status message'
description: 'Report a status message via Slack'

# Necessary permissions

# Send messages as @<NAME>
# chat:write

# Send messages as @<NAME> with a customized username and avatar
# chat:write.customize

# Add and edit emoji reactions
# reactions:write

inputs:
  slack_token:
    description: 'Slack bot token'
    required: true

  slack_channel_id:
    description: 'Slack channel identifier'
    required: true

  slack_message_ts:
    description: 'Message timestamp'
    required: false

  slack_reaction:
    description: 'Send additional Slack reaction'
    required: false

  job:
    description: 'PULL_REQUEST, RELEASE, DEPLOY_VERSION'
    required: true

  status:
    description: 'IN_PROGRESS, SUCCESS, FAILURE'
    required: true

  type:
    description: 'LAMBDA, COMPONENT or SERVICE'
    required: true

  changelog:
    description: 'Changelog in markdown'
    required: false

  version:
    description: 'New (non)prod version'
    required: false

outputs:
  slack_message_ts:
    description: 'Slack message timestamp'
    value: ${{ steps.slack-message.outputs.slack_message_ts }}

runs:
  using: 'composite'
  steps:
    - name: 'General env variables'
      shell: bash
      env:
        REPOSITORY: ${{ github.repository }}
      run: |
        echo "REPO_BASE_URL=https://github.com/$REPOSITORY" >> $GITHUB_ENV
        ARTEFACT_NAME="$(echo $REPOSITORY| cut -d'/' -f 2)"
        echo "ARTEFACT_NAME=$ARTEFACT_NAME" >> $GITHUB_ENV

    - name: 'Changelog title variables'
      if: ${{ inputs.changelog != '' }}
      shell: bash
      env:
        JOB: ${{ inputs.job }}
      run: |
        if [ "$JOB" = "PULL_REQUEST" ]; then
          echo "CHANGELOG_TITLE=*Released branches*" >> $GITHUB_ENV
        else
          echo "CHANGELOG_TITLE=*Changelog*" >> $GITHUB_ENV
        fi

    - name: 'Build env variables'
      shell: bash
      env:
        JOB: ${{ inputs.job }}
      run: |
        if [ "$JOB" = "PULL_REQUEST" ]; then
          echo "ENVIRONMENT=NONPROD" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=PROD" >> $GITHUB_ENV
        fi

    - name: 'Type env variables'
      # https://www.webfx.com/tools/emoji-cheat-sheet/
      shell: bash
      env:
        TYPE: ${{ inputs.type }}
      run: |
        if [ "$TYPE" = "LAMBDA" ]; then
          echo "TYPE_EMOJI=:heart:" >> $GITHUB_ENV
        elif [ "$TYPE" = "COMPONENT" ]; then
          echo "TYPE_EMOJI=:yellow_heart:" >> $GITHUB_ENV
        else
          echo "TYPE_EMOJI=:green_heart:" >> $GITHUB_ENV
        fi

    - name: "Convert message to Slack's mrkdwn format"
      if: ${{ inputs.changelog != '' }}
      id: slackify-mrkdwn
      # https://github.com/LoveToKnow/slackify-markdown-action
      uses: lovetoknow/slackify-markdown-action@v1.0.0
      with:
        text: ${{ inputs.changelog }}

    - name: "Escape all newlines in mrkdwn"
      id: mrkdwn
      shell: bash
      env:
        MRKDWN: ${{ steps.slackify-mrkdwn.outputs.text }}
      run: |
        output="$MRKDWN"
        output=${output//$'\n'/\\n}
        echo "::set-output name=text::$output"

    - id: change-string-case-type
      # https://github.com/ASzc/change-string-case-action
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ inputs.type }}

    - id: change-string-case-job
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ inputs.job }}

    - id: change-string-case-status
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ inputs.status }}

    - name: 'Template variable'
      id: template-path
      shell: bash
      env:
        TYPE: ${{ steps.change-string-case-type.outputs.lowercase }}
        JOB: ${{ steps.change-string-case-job.outputs.lowercase }}
        STATUS: ${{ steps.change-string-case-status.outputs.lowercase }}
      run: |
        output="templates/$TYPE/$JOB-$STATUS.hbs"
        echo "::set-output name=template::$output"

    - name: 'Echo variables'
      shell: bash
      env:
        JOB: ${{ inputs.job }}
        STATUS: ${{ inputs.status }}
        TYPE: ${{ inputs.type }}
        VERSION: ${{ inputs.version }}
        CHANGELOG: ${{ steps.mrkdwn.outputs.text }}
        TEMPLATE_PATH: ${{ steps.template-path.outputs.template }}
        SLACK_MESSAGE_TIMESTAMP: ${{ inputs.slack_message_ts }}
      run: |
        echo "Job: '$JOB'"
        echo "Status: '$STATUS'"
        echo "Type: '$TYPE'"
        echo "Version: '$VERSION'"
        echo "Empoji: '$TYPE_EMOJI'"
        echo "Environment: '$ENVIRONMENT'"
        echo "Changelog title: '$CHANGELOG_TITLE'"
        echo "Changelog: '$CHANGELOG'"
        echo "Repo base url: '$REPO_BASE_URL'"
        echo "Artefact name: '$ARTEFACT_NAME'"
        echo "Template path: '$TEMPLATE_PATH'"
        echo "Slack message timestamp: '$SLACK_MESSAGE_TIMESTAMP'"

    - name: "Render template"
      id: render-template
      # https://github.com/badsyntax/github-action-render-template
      uses: badsyntax/github-action-render-template@v1.0.0
      with:
        template: ${{ github.action_path }}/${{ steps.template-path.outputs.template }}
        inputs: |
          {
            "type": "${{ steps.change-string-case-type.outputs.capitalized }}",
            "repo_base_url": "${{ env.REPO_BASE_URL }}",
            "artefact_name": "${{ env.ARTEFACT_NAME }}",
            "version": "${{ inputs.version }}",
            "environment": "${{ env.ENVIRONMENT }}",
            "type_emoji": "${{ env.TYPE_EMOJI }}",
            "changelog_title": "${{ env.CHANGELOG_TITLE }}",
            "changelog": "${{ steps.mrkdwn.outputs.text }}",
            "run_id": "${{ github.run_id }}"
          }

    - name: "Send Slack message"
      if: ${{ inputs.slack_message_ts == '' }}
      # https://github.com/archive/github-actions-slack
      uses: archive/github-actions-slack@v2.4.0
      id: send-message
      with:
        slack-function: send-message
        slack-bot-user-oauth-access-token: ${{ inputs.slack_token }}
        slack-channel: ${{ inputs.slack_channel_id }}
        slack-text: ${{ steps.render-template.outputs.result }}

    - name: "Send Slack message update"
      if: ${{ inputs.slack_message_ts != '' }}
      uses: archive/github-actions-slack@v2.4.0
      with:
        slack-function: update-message
        slack-bot-user-oauth-access-token: ${{ inputs.slack_token }}
        slack-channel: ${{ inputs.slack_channel_id }}
        slack-update-message-text: ${{ steps.render-template.outputs.result }}
        slack-update-message-ts: ${{ inputs.slack_message_ts }}

    - name: "Send Slack reaction"
      if: ${{ inputs.slack_message_ts != '' && inputs.status == 'SUCCESS' && inputs.slack_reaction != '' }}
      uses: archive/github-actions-slack@v2.4.0
      with:
        slack-function: send-reaction
        slack-bot-user-oauth-access-token: ${{ inputs.slack_token }}
        slack-channel: ${{ inputs.slack_channel_id }}
        slack-emoji-name: ${{ inputs.slack_reaction }}
        slack-message-timestamp: ${{ inputs.slack_message_ts }}

    - name: 'Slack message timestamp'
      if: ${{ inputs.slack_message_ts == '' }}
      id: slack-message
      shell: bash
      env:
        # May contain invalid characters for the bash shell - `SLACK_FORMATTING`
        SEND_MESSAGE_OUTPUT: ${{ steps.send-message.outputs.slack-result }}
      run: |
        MESSAGE_OUTPUT=$(echo $SEND_MESSAGE_OUTPUT | sed -e "s/\`/____/g")
        if [ -z "$MESSAGE_OUTPUT" ]; then
          output=""
          echo "::set-output name=slack_message_ts::$output"
        else
          MESSAGE_TIMESTAMP=`echo $(jq -r '.response.message.ts' <<< "$MESSAGE_OUTPUT")`
          echo "::set-output name=slack_message_ts::$MESSAGE_TIMESTAMP"
          echo "Message timestamp '$MESSAGE_TIMESTAMP'"
        fi
